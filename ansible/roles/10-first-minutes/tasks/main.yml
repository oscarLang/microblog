---
-   name: Set root password
    user:
        name: root
        password: "{{ root_password }}"
-   name: Update apt-cache and upgrade
    apt:
        force_apt_get: yes
        update-cache: "True"
        cache_valid_time: 3600
        upgrade: yes
-   name: Install packages
    apt:
        force_apt_get: yes
        name: "{{ packages }}"
-   name: Copy unattended upgrades 10 settings
    copy:
        src: files/apt_periodic
        dest: /etc/apt/apt.conf.d/10periodic
-   name: Copy unattended upgrades 50 settings
    copy:
        src: files/apt_periodic_50
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
-   name: Create user deploy
    user:
        name: "{{ server_user }}"
        password: "{{ server_user_password }}"
        state: present
        shell: /bin/bash
        groups: "{{ server_user_groups }}"

-   name: Add ssh-key for user deploy
    authorized_key:
        user: "{{ server_user }}"
        state: present
        key: "{{ lookup('file', pub_ssh_key_location) }}"
#
# -   name: Dissallow root ssh access
#     lineinfile:
#         path: /etc/ssh/sshd_config
#         regexp: "^PermitRootLogin"
#         line: "PermitRootLogin no"
#         state: present
#     notify:
#         - restart ssh
#
# -   name: Remove need for password
#     lineinfile:
#         path: /etc/ssh/sshd_config
#         regexp: "^PasswordAuthentication"
#         line: "PasswordAuthentication no"
#         state: present
#     notify:
#         - restart ssh

-   name: COPY sshd config file
    template:
        src: sshd_config.j2
        dest: /etc/ssh/sshd_config
        owner: "{{server_user}}"
        group: "{{server_user}}"
        mode: "0644"
    notify:
        - restart ssh

-   meta: flush_handlers

-   name: Add user to sudoers
    lineinfile:
        dest: /etc/sudoers
        regexp: "{{ server_user }} ALL"
        line: "{{ server_user }} ALL=(ALL) NOPASSWD: ALL"
        state: present

# -   name: Only allow user to ssh
#     lineinfile:
#         path: /etc/ssh/sshd_config
#         regexp: "^AllowUsers"
#         line: "AllowUsers {{ server_user }}"
#         state: present
#     ignore_errors: yes

-   name: remove default user
    remote_user: "{{ server_user }}"
    user:
        name: azureuser
        state: absent
        force: yes
        remove: yes
    ignore_errors: yes
